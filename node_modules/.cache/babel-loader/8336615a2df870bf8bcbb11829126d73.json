{"remainingRequest":"/Users/monika/Desktop/vue/node_modules/babel-loader/lib/index.js!/Users/monika/Desktop/vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/monika/Desktop/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/monika/Desktop/vue/src/components/Card.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/monika/Desktop/vue/src/components/Card.vue","mtime":1616789766455},{"path":"/Users/monika/Desktop/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/monika/Desktop/vue/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/monika/Desktop/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/monika/Desktop/vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Card.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n\t<v-card :loading=\"loading\" color=\"grey lighten-3\" v-if=\"item\">\n\t\t<v-card-title>\n\t\t\t<h3 contenteditable @blur=\"e => updatePost({'post_title': e.currentTarget.innerText, 'ID': item.id})\" class=\"font-weight-bold\" v-text=\"item.title.rendered\" />\n\t\t\t<v-spacer></v-spacer>\n\t\t\t<v-btn icon @click=\"removePost(item.id)\" :loading=\"loading\">\n\t\t\t\t<v-icon>mdi-delete</v-icon>\n\t\t\t</v-btn>\n\t\t\t<v-btn icon @click=\"$emit('closeModal')\">\n\t\t\t\t<v-icon>mdi-close</v-icon>\n\t\t\t</v-btn>\n\t\t</v-card-title>\n\t\t<v-card-text>\n\t\t\t<b>Description:</b>\n\t\t\t<v-textarea v-model=\"description\" class=\"mt-3\" @blur=\"updatePost({'post_excerpt': description, 'ID': item.id})\" :loading=\"updateLoading\" :disabled=\"updateLoading\" flat solo filled placeholder=\"Enter Description of card\"></v-textarea>\n\t\t</v-card-text>\n\t\t<v-card-text>\n\t\t\t<b>Activities</b>\n\t\t\t<v-text-field v-model=\"comment\" @keyup=\"e => e.key === 'Enter' ? this.createComment() : ''\" :loading=\"addCommentLoading\" class=\"mt-3\" flat solo filled dense placeholder=\"Enter Comment\" />\n\t\t</v-card-text>\n\t\t<v-card-text>\n\t\t\t<v-list color=\"transparent\">\n\t\t\t\t<v-list-item class=\"white my-2\" v-for=\"(item, i) in comments\" :key=\"i\">\n\t\t\t\t\t<v-list-item-avatar>\n\t\t\t\t\t\t<v-icon large>mdi-account</v-icon>\n\t\t\t\t\t</v-list-item-avatar>\n\t\t\t\t\t<v-list-item-content>\n\t\t\t\t\t\t<v-list-item-title v-text=\"item.author_name\" />\n\t\t\t\t\t\t<v-list-item-subtitle contenteditable @blur=\"e => updateComment({'comment_content': e.currentTarget.innerText, 'comment_ID': item.id})\" class=\"mt-1\" v-html=\"item.content.rendered\" />\n\t\t\t\t\t</v-list-item-content>\n\t\t\t\t\t<v-list-item-action>\n\t\t\t\t\t\t<v-btn icon @click=\"removeComment(item.id)\">\n\t\t\t\t\t\t\t<v-icon>mdi-delete</v-icon>\n\t\t\t\t\t\t</v-btn>\n\t\t\t\t\t</v-list-item-action>\n\t\t\t\t</v-list-item>\n\t\t\t</v-list>\n\t\t</v-card-text>\n\t</v-card>\n</template>\n\n<script lang='js'>\n\nimport {get, post} from \"axios\";\n\nexport default {\n\tprops: {\n\t\titem: {\n\t\t\ttype: Object,\n\t\t\tdefault: () => null\n\t\t}\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tcomments: [],\n\t\t\tcomment: '',\n\t\t\tloading: false,\n\t\t\taddCommentLoading: false,\n\t\t\tupdateLoading: false,\n\t\t\tdescription: '',\n\t\t}\n\t},\n\tmounted() {\n\t\tif (this.item) {\n\t\t\tthis.description = this.item.excerpt.rendered\n\t\t\tthis.getComments(this.item.id)\n\t\t}\n\t},\n\tmethods: {\n\t\tasync getComments(id) {\n\t\t\tthis.loading = true\n\t\t\ttry {\n\t\t\t\tconst response = await get(this.$store.getters.API + '/comments?post=' + id)\n\t\t\t\tthis.comments = response.data\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(e.toString())\n\t\t\t} finally {\n\t\t\t\tthis.loading = false\n\t\t\t}\n\t\t},\n\t\tasync createComment() {\n\t\t\tthis.addCommentLoading = true\n\t\t\ttry {\n\t\t\t\tconst response = await post(this.$store.getters.API + '/comment/create',\n\t\t\t\t\t`comment=${this.comment}&post_id=${this.item.id}`,\n\t\t\t\t\t{\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t'content-type': 'application/x-www-form-urlencoded'\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\tif (response.data) {\n\t\t\t\t\tthis.comment = ''\n\t\t\t\t\tthis.getComments(this.item.id)\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(e.toString())\n\t\t\t} finally {\n\t\t\t\tthis.addCommentLoading = false\n\t\t\t}\n\t\t},\n\t\tasync removeComment(id) {\n\t\t\tthis.loading = true\n\t\t\ttry {\n\t\t\t\tconst response = await post(this.$store.getters.API + '/comment/remove',\n\t\t\t\t\t`comment_id=${id}`,\n\t\t\t\t\t{\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t'content-type': 'application/x-www-form-urlencoded'\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\tif (response.data) {\n\t\t\t\t\tthis.getComments(this.item.id)\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(e.toString())\n\t\t\t} finally {\n\t\t\t\tthis.loading = false\n\t\t\t}\n\t\t},\n\t\tasync removePost(id) {\n\t\t\tthis.loading = true\n\t\t\ttry {\n\t\t\t\tconst response = await post(this.$store.getters.API + '/post/remove',\n\t\t\t\t\t`post_id=${id}`,\n\t\t\t\t\t{\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t'content-type': 'application/x-www-form-urlencoded'\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\tif (response.data) {\n\t\t\t\t\tthis.$emit('postRemoved')\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(e.toString())\n\t\t\t} finally {\n\t\t\t\tthis.loading = false\n\t\t\t}\n\t\t},\n\t\tasync updatePost(data) {\n\t\t\tthis.updateLoading = true\n\t\t\tlet dataString = ''\n\t\t\tfor(let i in data) {\n\t\t\t\tdataString += `${i}=${data[i]}&`\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tawait post(this.$store.getters.API + '/post/edit',\n\t\t\t\t\tdataString,\n\t\t\t\t\t{\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t'content-type': 'application/x-www-form-urlencoded'\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(e.toString())\n\t\t\t} finally {\n\t\t\t\tthis.updateLoading = false\n\t\t\t}\n\t\t},\n\t\tasync updateComment(data) {\n\t\t\tthis.updateLoading = true\n\t\t\tlet dataString = ''\n\t\t\tfor(let i in data) {\n\t\t\t\tdataString += `${i}=${data[i]}&`\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tawait post(this.$store.getters.API + '/comment/edit',\n\t\t\t\t\tdataString,\n\t\t\t\t\t{\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t'content-type': 'application/x-www-form-urlencoded'\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(e.toString())\n\t\t\t} finally {\n\t\t\t\tthis.updateLoading = false\n\t\t\t}\n\t\t}\n\n\t}\n}\n</script>\n\n<style scoped>\n\n</style>\n"],"sourceRoot":"src/components"}]}