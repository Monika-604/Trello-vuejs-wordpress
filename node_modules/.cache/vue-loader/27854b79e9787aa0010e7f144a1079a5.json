{"remainingRequest":"/Users/monika/Desktop/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/monika/Desktop/vue/src/views/List.vue?vue&type=style&index=0&id=20863650&scoped=true&lang=scss&","dependencies":[{"path":"/Users/monika/Desktop/vue/src/views/List.vue","mtime":1616787406822},{"path":"/Users/monika/Desktop/vue/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/monika/Desktop/vue/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/monika/Desktop/vue/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/monika/Desktop/vue/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/monika/Desktop/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/monika/Desktop/vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoubGlzdHMgewoJZGlzcGxheTogZmxleDsKCWFsaWduLWNvbnRlbnQ6IGNlbnRlcjsKCXdpZHRoOiAxMDAlOwoJJiA+IC52LWNhcmQgewoJCXdpZHRoOiAyODBweDsKCQltaW4td2lkdGg6IDI4MHB4OwoJCW1hcmdpbjogMCA2cHg7CgkJaGVpZ2h0OiBmaXQtY29udGVudDsKCX0KfQo="},{"version":3,"sources":["List.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"List.vue","sourceRoot":"src/views","sourcesContent":["<template>\n\t<div class=\"lists\">\n\t\t<v-card v-for=\"(item, i) in items\" flat :key=\"i\">\n\t\t\t<v-card-text class=\"d-flex justify-space-between align-center\">\n\t\t\t\t<h3 v-text=\"item.name\" contenteditable @blur=\"e => updateCategory({'name': e.currentTarget.innerText, 'cat_ID': item.id})\" />\n\t\t\t\t<v-spacer />\n\t\t\t\t<v-btn icon @click=\"removeCategory(item.id)\" >\n\t\t\t\t\t<v-icon>mdi-delete</v-icon>\n\t\t\t\t</v-btn>\n\t\t\t</v-card-text>\n\t\t\t<v-card-text>\n\t\t\t\t<v-btn @click=\"currentPost = post; showCardModal = true\" block class=\"my-1 justify-start\" depressed v-for=\"(post, j) in item.posts\" :key=\"j\">\n\t\t\t\t\t{{post.title.rendered}}\n\t\t\t\t</v-btn>\n\t\t\t</v-card-text>\n\t\t\t<v-card-text>\n\t\t\t\t<v-btn link @click=\"currentCategory = item; showAddPost = !showAddPost\" color=\"white grey--text\" depressed>\n\t\t\t\t\t<v-icon left>mdi-plus</v-icon>\n\t\t\t\t\tAdd new card\n\t\t\t\t</v-btn>\n\t\t\t</v-card-text>\n\t\t</v-card>\n\t\t<v-card flat class=\"grey lighten-1 text-center\">\n\t\t\t<v-card-text>\n\t\t\t\t<v-btn @click=\"showAdd = !showAdd\" class=\"grey lighten-1 font-weight-black text-capitalize\" dark depressed>Add new list</v-btn>\n\t\t\t\t<v-text-field @keyup=\"e => e.key === 'Enter' ? this.createCategory() : ''\" class=\"my-2\" v-show=\"showAdd\" filled dense solo flat v-model=\"newCategoryName\" placeholder=\"List Name: \" />\n\t\t\t</v-card-text>\n\t\t</v-card>\n\t\t<v-bottom-sheet v-model=\"showAddPost\">\n\t\t\t<v-card>\n\t\t\t\t<v-card-title>Add new card to {{currentCategory ? currentCategory.name : ''}}</v-card-title>\n\t\t\t\t<v-card-text>\n\t\t\t\t\t<v-text-field @keyup=\"e => e.key === 'Enter' ? this.CreatePost() : ''\" class=\"my-2\" filled dense solo flat v-model=\"newPostName\" placeholder=\"Card Name: \" />\n\t\t\t\t</v-card-text>\n\t\t\t</v-card>\n\t\t</v-bottom-sheet>\n\t\t<v-dialog v-model=\"showCardModal\" persistent v-if=\"currentPost\">\n\t\t\t<Card :item=\"currentPost\" @closeModal=\"closeModal\" @postRemoved=\"afterPostRemoved\" />\n\t\t</v-dialog>\n\t</div>\n</template>\n\n<script>\nimport {get, post} from \"axios\";\nimport Card from \"@/components/Card\";\n\nexport default {\n\tcomponents: {Card},\n\tdata() {\n\t\treturn {\n\t\t\tshowAdd: false,\n\t\t\tnewCategoryName: '',\n\t\t\tshowAddPost: '',\n\t\t\tnewPostName: '',\n\t\t\tcurrentCategory: null,\n\t\t\tcurrentPost: null,\n\t\t\tshowCardModal: false,\n\t\t\titems: []\n\t\t}\n\t},\n\n\tmounted(){\n\t\tthis.getCategories()\n\t},\n\n\tmethods: {\n\t\tasync getCategories(){\n\t\t\ttry {\n\t\t\t\tconst response = await get(this.$store.getters.API + '/categories')\n\t\t\t\tresponse.data = response.data.reverse()\n\t\t\t\tthis.items = response.data\n\t\t\t\tfor (const item of this.items) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\titem.posts = await this.getPosts(item.id)\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tconsole.log(e.toString())\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$forceUpdate()\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(e.toString())\n\t\t\t}\n\t\t},\n\n\t\tasync getPosts(id) {\n\t\t\ttry {\n\t\t\t\tconst response = await get(this.$store.getters.API + '/posts?categories=' + id)\n\t\t\t\treturn response.data\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(e.toString())\n\t\t\t}\n\t\t},\n\n\t\tasync createCategory() {\n\t\t\ttry {\n\t\t\t\tconst response = await post(this.$store.getters.API + '/category/create',\n\t\t\t\t\t`name=${this.newCategoryName}`,\n\t\t\t\t\t{\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t'content-type': 'application/x-www-form-urlencoded'\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\tif (response.data) {\n\t\t\t\t\tthis.getCategories()\n\t\t\t\t\tthis.newCategoryName = ''\n\t\t\t\t\tthis.showAdd = false\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(e.toString())\n\t\t\t}\n\t\t},\n\t\tasync CreatePost() {\n\t\t\ttry {\n\t\t\t\tconst response = await post(this.$store.getters.API + '/post/create',\n\t\t\t\t\t`name=${this.newPostName}&category_id=${this.currentCategory.id}`,\n\t\t\t\t\t{\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t'content-type': 'application/x-www-form-urlencoded'\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\tif (response.data) {\n\t\t\t\t\tthis.getCategories()\n\t\t\t\t\tthis.newPostName = ''\n\t\t\t\t\tthis.showAddPost = false\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(e.toString())\n\t\t\t}\n\t\t},\n\t\tasync removeCategory(id) {\n\t\t\tthis.loading = true\n\t\t\ttry {\n\t\t\t\tconst response = await post(this.$store.getters.API + '/category/remove',\n\t\t\t\t\t`category_id=${id}`,\n\t\t\t\t\t{\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t'content-type': 'application/x-www-form-urlencoded'\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\tif (response.data) {\n\t\t\t\t\tthis.getCategories()\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(e.toString())\n\t\t\t} finally {\n\t\t\t\tthis.loading = false\n\t\t\t}\n\t\t},\n\t\tasync updateCategory(data) {\n\t\t\tlet dataString = ''\n\t\t\tfor(let i in data) {\n\t\t\t\tdataString += `${i}=${data[i]}&`\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tawait post(this.$store.getters.API + '/category/edit',\n\t\t\t\t\tdataString,\n\t\t\t\t\t{\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t'content-type': 'application/x-www-form-urlencoded'\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(e.toString())\n\t\t\t}\n\t\t},\n\t\tcloseModal() {\n\t\t\tthis.showCardModal=false;\n\t\t\tthis.currentPost = null\n\t\t},\n\t\tafterPostRemoved() {\n\t\t\tthis.closeModal()\n\t\t\tthis.getCategories()\n\t\t}\n\t}\n}\n</script>\n\n<style scoped lang=\"scss\">\n.lists {\n\tdisplay: flex;\n\talign-content: center;\n\twidth: 100%;\n\t& > .v-card {\n\t\twidth: 280px;\n\t\tmin-width: 280px;\n\t\tmargin: 0 6px;\n\t\theight: fit-content;\n\t}\n}\n</style>\n"]}]}