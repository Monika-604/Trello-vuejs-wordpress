{"remainingRequest":"/Users/monika/Desktop/MVVM_TWP/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/monika/Desktop/MVVM_TWP/src/components/Card.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/monika/Desktop/MVVM_TWP/src/components/Card.vue","mtime":1616789766455},{"path":"/Users/monika/Desktop/MVVM_TWP/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/monika/Desktop/MVVM_TWP/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/monika/Desktop/MVVM_TWP/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/monika/Desktop/MVVM_TWP/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCmltcG9ydCB7Z2V0LCBwb3N0fSBmcm9tICJheGlvcyI7CgpleHBvcnQgZGVmYXVsdCB7Cglwcm9wczogewoJCWl0ZW06IHsKCQkJdHlwZTogT2JqZWN0LAoJCQlkZWZhdWx0OiAoKSA9PiBudWxsCgkJfQoJfSwKCWRhdGEoKSB7CgkJcmV0dXJuIHsKCQkJY29tbWVudHM6IFtdLAoJCQljb21tZW50OiAnJywKCQkJbG9hZGluZzogZmFsc2UsCgkJCWFkZENvbW1lbnRMb2FkaW5nOiBmYWxzZSwKCQkJdXBkYXRlTG9hZGluZzogZmFsc2UsCgkJCWRlc2NyaXB0aW9uOiAnJywKCQl9Cgl9LAoJbW91bnRlZCgpIHsKCQlpZiAodGhpcy5pdGVtKSB7CgkJCXRoaXMuZGVzY3JpcHRpb24gPSB0aGlzLml0ZW0uZXhjZXJwdC5yZW5kZXJlZAoJCQl0aGlzLmdldENvbW1lbnRzKHRoaXMuaXRlbS5pZCkKCQl9Cgl9LAoJbWV0aG9kczogewoJCWFzeW5jIGdldENvbW1lbnRzKGlkKSB7CgkJCXRoaXMubG9hZGluZyA9IHRydWUKCQkJdHJ5IHsKCQkJCWNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZ2V0KHRoaXMuJHN0b3JlLmdldHRlcnMuQVBJICsgJy9jb21tZW50cz9wb3N0PScgKyBpZCkKCQkJCXRoaXMuY29tbWVudHMgPSByZXNwb25zZS5kYXRhCgkJCX0gY2F0Y2ggKGUpIHsKCQkJCWNvbnNvbGUubG9nKGUudG9TdHJpbmcoKSkKCQkJfSBmaW5hbGx5IHsKCQkJCXRoaXMubG9hZGluZyA9IGZhbHNlCgkJCX0KCQl9LAoJCWFzeW5jIGNyZWF0ZUNvbW1lbnQoKSB7CgkJCXRoaXMuYWRkQ29tbWVudExvYWRpbmcgPSB0cnVlCgkJCXRyeSB7CgkJCQljb25zdCByZXNwb25zZSA9IGF3YWl0IHBvc3QodGhpcy4kc3RvcmUuZ2V0dGVycy5BUEkgKyAnL2NvbW1lbnQvY3JlYXRlJywKCQkJCQlgY29tbWVudD0ke3RoaXMuY29tbWVudH0mcG9zdF9pZD0ke3RoaXMuaXRlbS5pZH1gLAoJCQkJCXsKCQkJCQkJaGVhZGVyczogewoJCQkJCQkJJ2NvbnRlbnQtdHlwZSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnCgkJCQkJCX0sCgkJCQkJfQoJCQkJKQoJCQkJaWYgKHJlc3BvbnNlLmRhdGEpIHsKCQkJCQl0aGlzLmNvbW1lbnQgPSAnJwoJCQkJCXRoaXMuZ2V0Q29tbWVudHModGhpcy5pdGVtLmlkKQoJCQkJfQoJCQl9IGNhdGNoIChlKSB7CgkJCQljb25zb2xlLmxvZyhlLnRvU3RyaW5nKCkpCgkJCX0gZmluYWxseSB7CgkJCQl0aGlzLmFkZENvbW1lbnRMb2FkaW5nID0gZmFsc2UKCQkJfQoJCX0sCgkJYXN5bmMgcmVtb3ZlQ29tbWVudChpZCkgewoJCQl0aGlzLmxvYWRpbmcgPSB0cnVlCgkJCXRyeSB7CgkJCQljb25zdCByZXNwb25zZSA9IGF3YWl0IHBvc3QodGhpcy4kc3RvcmUuZ2V0dGVycy5BUEkgKyAnL2NvbW1lbnQvcmVtb3ZlJywKCQkJCQlgY29tbWVudF9pZD0ke2lkfWAsCgkJCQkJewoJCQkJCQloZWFkZXJzOiB7CgkJCQkJCQknY29udGVudC10eXBlJzogJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCcKCQkJCQkJfSwKCQkJCQl9CgkJCQkpCgkJCQlpZiAocmVzcG9uc2UuZGF0YSkgewoJCQkJCXRoaXMuZ2V0Q29tbWVudHModGhpcy5pdGVtLmlkKQoJCQkJfQoJCQl9IGNhdGNoIChlKSB7CgkJCQljb25zb2xlLmxvZyhlLnRvU3RyaW5nKCkpCgkJCX0gZmluYWxseSB7CgkJCQl0aGlzLmxvYWRpbmcgPSBmYWxzZQoJCQl9CgkJfSwKCQlhc3luYyByZW1vdmVQb3N0KGlkKSB7CgkJCXRoaXMubG9hZGluZyA9IHRydWUKCQkJdHJ5IHsKCQkJCWNvbnN0IHJlc3BvbnNlID0gYXdhaXQgcG9zdCh0aGlzLiRzdG9yZS5nZXR0ZXJzLkFQSSArICcvcG9zdC9yZW1vdmUnLAoJCQkJCWBwb3N0X2lkPSR7aWR9YCwKCQkJCQl7CgkJCQkJCWhlYWRlcnM6IHsKCQkJCQkJCSdjb250ZW50LXR5cGUnOiAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJwoJCQkJCQl9LAoJCQkJCX0KCQkJCSkKCQkJCWlmIChyZXNwb25zZS5kYXRhKSB7CgkJCQkJdGhpcy4kZW1pdCgncG9zdFJlbW92ZWQnKQoJCQkJfQoJCQl9IGNhdGNoIChlKSB7CgkJCQljb25zb2xlLmxvZyhlLnRvU3RyaW5nKCkpCgkJCX0gZmluYWxseSB7CgkJCQl0aGlzLmxvYWRpbmcgPSBmYWxzZQoJCQl9CgkJfSwKCQlhc3luYyB1cGRhdGVQb3N0KGRhdGEpIHsKCQkJdGhpcy51cGRhdGVMb2FkaW5nID0gdHJ1ZQoJCQlsZXQgZGF0YVN0cmluZyA9ICcnCgkJCWZvcihsZXQgaSBpbiBkYXRhKSB7CgkJCQlkYXRhU3RyaW5nICs9IGAke2l9PSR7ZGF0YVtpXX0mYAoJCQl9CgkJCXRyeSB7CgkJCQlhd2FpdCBwb3N0KHRoaXMuJHN0b3JlLmdldHRlcnMuQVBJICsgJy9wb3N0L2VkaXQnLAoJCQkJCWRhdGFTdHJpbmcsCgkJCQkJewoJCQkJCQloZWFkZXJzOiB7CgkJCQkJCQknY29udGVudC10eXBlJzogJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCcKCQkJCQkJfSwKCQkJCQl9CgkJCQkpCgkJCX0gY2F0Y2ggKGUpIHsKCQkJCWNvbnNvbGUubG9nKGUudG9TdHJpbmcoKSkKCQkJfSBmaW5hbGx5IHsKCQkJCXRoaXMudXBkYXRlTG9hZGluZyA9IGZhbHNlCgkJCX0KCQl9LAoJCWFzeW5jIHVwZGF0ZUNvbW1lbnQoZGF0YSkgewoJCQl0aGlzLnVwZGF0ZUxvYWRpbmcgPSB0cnVlCgkJCWxldCBkYXRhU3RyaW5nID0gJycKCQkJZm9yKGxldCBpIGluIGRhdGEpIHsKCQkJCWRhdGFTdHJpbmcgKz0gYCR7aX09JHtkYXRhW2ldfSZgCgkJCX0KCQkJdHJ5IHsKCQkJCWF3YWl0IHBvc3QodGhpcy4kc3RvcmUuZ2V0dGVycy5BUEkgKyAnL2NvbW1lbnQvZWRpdCcsCgkJCQkJZGF0YVN0cmluZywKCQkJCQl7CgkJCQkJCWhlYWRlcnM6IHsKCQkJCQkJCSdjb250ZW50LXR5cGUnOiAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJwoJCQkJCQl9LAoJCQkJCX0KCQkJCSkKCQkJfSBjYXRjaCAoZSkgewoJCQkJY29uc29sZS5sb2coZS50b1N0cmluZygpKQoJCQl9IGZpbmFsbHkgewoJCQkJdGhpcy51cGRhdGVMb2FkaW5nID0gZmFsc2UKCQkJfQoJCX0KCgl9Cn0K"},{"version":3,"sources":["Card.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"Card.vue","sourceRoot":"src/components","sourcesContent":["<template>\n\t<v-card :loading=\"loading\" color=\"grey lighten-3\" v-if=\"item\">\n\t\t<v-card-title>\n\t\t\t<h3 contenteditable @blur=\"e => updatePost({'post_title': e.currentTarget.innerText, 'ID': item.id})\" class=\"font-weight-bold\" v-text=\"item.title.rendered\" />\n\t\t\t<v-spacer></v-spacer>\n\t\t\t<v-btn icon @click=\"removePost(item.id)\" :loading=\"loading\">\n\t\t\t\t<v-icon>mdi-delete</v-icon>\n\t\t\t</v-btn>\n\t\t\t<v-btn icon @click=\"$emit('closeModal')\">\n\t\t\t\t<v-icon>mdi-close</v-icon>\n\t\t\t</v-btn>\n\t\t</v-card-title>\n\t\t<v-card-text>\n\t\t\t<b>Description:</b>\n\t\t\t<v-textarea v-model=\"description\" class=\"mt-3\" @blur=\"updatePost({'post_excerpt': description, 'ID': item.id})\" :loading=\"updateLoading\" :disabled=\"updateLoading\" flat solo filled placeholder=\"Enter Description of card\"></v-textarea>\n\t\t</v-card-text>\n\t\t<v-card-text>\n\t\t\t<b>Activities</b>\n\t\t\t<v-text-field v-model=\"comment\" @keyup=\"e => e.key === 'Enter' ? this.createComment() : ''\" :loading=\"addCommentLoading\" class=\"mt-3\" flat solo filled dense placeholder=\"Enter Comment\" />\n\t\t</v-card-text>\n\t\t<v-card-text>\n\t\t\t<v-list color=\"transparent\">\n\t\t\t\t<v-list-item class=\"white my-2\" v-for=\"(item, i) in comments\" :key=\"i\">\n\t\t\t\t\t<v-list-item-avatar>\n\t\t\t\t\t\t<v-icon large>mdi-account</v-icon>\n\t\t\t\t\t</v-list-item-avatar>\n\t\t\t\t\t<v-list-item-content>\n\t\t\t\t\t\t<v-list-item-title v-text=\"item.author_name\" />\n\t\t\t\t\t\t<v-list-item-subtitle contenteditable @blur=\"e => updateComment({'comment_content': e.currentTarget.innerText, 'comment_ID': item.id})\" class=\"mt-1\" v-html=\"item.content.rendered\" />\n\t\t\t\t\t</v-list-item-content>\n\t\t\t\t\t<v-list-item-action>\n\t\t\t\t\t\t<v-btn icon @click=\"removeComment(item.id)\">\n\t\t\t\t\t\t\t<v-icon>mdi-delete</v-icon>\n\t\t\t\t\t\t</v-btn>\n\t\t\t\t\t</v-list-item-action>\n\t\t\t\t</v-list-item>\n\t\t\t</v-list>\n\t\t</v-card-text>\n\t</v-card>\n</template>\n\n<script lang='js'>\n\nimport {get, post} from \"axios\";\n\nexport default {\n\tprops: {\n\t\titem: {\n\t\t\ttype: Object,\n\t\t\tdefault: () => null\n\t\t}\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tcomments: [],\n\t\t\tcomment: '',\n\t\t\tloading: false,\n\t\t\taddCommentLoading: false,\n\t\t\tupdateLoading: false,\n\t\t\tdescription: '',\n\t\t}\n\t},\n\tmounted() {\n\t\tif (this.item) {\n\t\t\tthis.description = this.item.excerpt.rendered\n\t\t\tthis.getComments(this.item.id)\n\t\t}\n\t},\n\tmethods: {\n\t\tasync getComments(id) {\n\t\t\tthis.loading = true\n\t\t\ttry {\n\t\t\t\tconst response = await get(this.$store.getters.API + '/comments?post=' + id)\n\t\t\t\tthis.comments = response.data\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(e.toString())\n\t\t\t} finally {\n\t\t\t\tthis.loading = false\n\t\t\t}\n\t\t},\n\t\tasync createComment() {\n\t\t\tthis.addCommentLoading = true\n\t\t\ttry {\n\t\t\t\tconst response = await post(this.$store.getters.API + '/comment/create',\n\t\t\t\t\t`comment=${this.comment}&post_id=${this.item.id}`,\n\t\t\t\t\t{\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t'content-type': 'application/x-www-form-urlencoded'\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\tif (response.data) {\n\t\t\t\t\tthis.comment = ''\n\t\t\t\t\tthis.getComments(this.item.id)\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(e.toString())\n\t\t\t} finally {\n\t\t\t\tthis.addCommentLoading = false\n\t\t\t}\n\t\t},\n\t\tasync removeComment(id) {\n\t\t\tthis.loading = true\n\t\t\ttry {\n\t\t\t\tconst response = await post(this.$store.getters.API + '/comment/remove',\n\t\t\t\t\t`comment_id=${id}`,\n\t\t\t\t\t{\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t'content-type': 'application/x-www-form-urlencoded'\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\tif (response.data) {\n\t\t\t\t\tthis.getComments(this.item.id)\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(e.toString())\n\t\t\t} finally {\n\t\t\t\tthis.loading = false\n\t\t\t}\n\t\t},\n\t\tasync removePost(id) {\n\t\t\tthis.loading = true\n\t\t\ttry {\n\t\t\t\tconst response = await post(this.$store.getters.API + '/post/remove',\n\t\t\t\t\t`post_id=${id}`,\n\t\t\t\t\t{\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t'content-type': 'application/x-www-form-urlencoded'\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\tif (response.data) {\n\t\t\t\t\tthis.$emit('postRemoved')\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(e.toString())\n\t\t\t} finally {\n\t\t\t\tthis.loading = false\n\t\t\t}\n\t\t},\n\t\tasync updatePost(data) {\n\t\t\tthis.updateLoading = true\n\t\t\tlet dataString = ''\n\t\t\tfor(let i in data) {\n\t\t\t\tdataString += `${i}=${data[i]}&`\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tawait post(this.$store.getters.API + '/post/edit',\n\t\t\t\t\tdataString,\n\t\t\t\t\t{\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t'content-type': 'application/x-www-form-urlencoded'\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(e.toString())\n\t\t\t} finally {\n\t\t\t\tthis.updateLoading = false\n\t\t\t}\n\t\t},\n\t\tasync updateComment(data) {\n\t\t\tthis.updateLoading = true\n\t\t\tlet dataString = ''\n\t\t\tfor(let i in data) {\n\t\t\t\tdataString += `${i}=${data[i]}&`\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tawait post(this.$store.getters.API + '/comment/edit',\n\t\t\t\t\tdataString,\n\t\t\t\t\t{\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t'content-type': 'application/x-www-form-urlencoded'\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(e.toString())\n\t\t\t} finally {\n\t\t\t\tthis.updateLoading = false\n\t\t\t}\n\t\t}\n\n\t}\n}\n</script>\n\n<style scoped>\n\n</style>\n"]}]}